{"ast":null,"code":"var _jsxFileName = \"/Users/franklinbarto/Workspace/React/bbox-finder/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [measurements, setMeasurements] = useState({\n    area: 0,\n    perimeter: 0\n  });\n  const [polygons, setPolygons] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const featureGroupRef = useRef();\n  const handleCreate = e => {\n    const {\n      layerType,\n      layer\n    } = e;\n    if (layerType === 'polygon') {\n      // Get the coordinates from the created polygon\n      const latLngs = layer.getLatLngs()[0];\n      const coordinates = latLngs.map(latLng => [latLng.lat, latLng.lng]);\n\n      // Calculate area and perimeter\n      const area = calculateArea(coordinates);\n      const perimeter = calculatePerimeter(coordinates);\n      setMeasurements({\n        area: area.toFixed(2),\n        perimeter: perimeter.toFixed(2)\n      });\n\n      // Add the polygon to state\n      setPolygons([...polygons, {\n        id: Date.now(),\n        coordinates,\n        area: area.toFixed(2),\n        perimeter: perimeter.toFixed(2)\n      }]);\n    }\n  };\n  const calculateArea = coordinates => {\n    // Basic area calculation (more accurate implementations would use geodesic calculations)\n    // This is a simplified version - real implementation would use a proper geospatial library\n    let area = 0;\n    for (let i = 0; i < coordinates.length; i++) {\n      const j = (i + 1) % coordinates.length;\n      area += coordinates[i][0] * coordinates[j][1];\n      area -= coordinates[j][0] * coordinates[i][1];\n    }\n    return Math.abs(area) * 111000 * 111000 / 2; // rough conversion to square meters\n  };\n  const calculatePerimeter = coordinates => {\n    // Basic perimeter calculation\n    let perimeter = 0;\n    for (let i = 0; i < coordinates.length; i++) {\n      const j = (i + 1) % coordinates.length;\n      const dx = coordinates[i][0] - coordinates[j][0];\n      const dy = coordinates[i][1] - coordinates[j][1];\n      perimeter += Math.sqrt(dx * dx + dy * dy);\n    }\n    return perimeter * 111000; // rough conversion to meters\n  };\n  const detectBoundaries = async () => {\n    setIsProcessing(true);\n    setErrorMessage('');\n    try {\n      // Get the current map bounds\n      const mapInstance = featureGroupRef.current._map;\n      const bounds = mapInstance.getBounds();\n      const center = mapInstance.getCenter();\n      const zoom = mapInstance.getZoom();\n      const response = await axios.post('http://localhost:5000/api/detect-boundaries', {\n        bounds: {\n          north: bounds.getNorth(),\n          south: bounds.getSouth(),\n          east: bounds.getEast(),\n          west: bounds.getWest()\n        },\n        center: {\n          lat: center.lat,\n          lng: center.lng\n        },\n        zoom: zoom\n      });\n\n      // Handle the detected boundaries\n      if (response.data.boundaries && response.data.boundaries.length > 0) {\n        // Clear existing layers\n        featureGroupRef.current.clearLayers();\n\n        // Add the detected boundaries as new polygons\n        const detectedPolygons = [];\n        response.data.boundaries.forEach(boundary => {\n          const coordinates = boundary.coordinates;\n\n          // Create a new polygon and add it to the feature group\n          const L = require('leaflet');\n          const polygon = L.polygon(coordinates);\n          featureGroupRef.current.addLayer(polygon);\n\n          // Calculate measurements\n          const area = calculateArea(coordinates);\n          const perimeter = calculatePerimeter(coordinates);\n          detectedPolygons.push({\n            id: Date.now() + Math.random(),\n            coordinates,\n            area: area.toFixed(2),\n            perimeter: perimeter.toFixed(2)\n          });\n        });\n        setPolygons([...polygons, ...detectedPolygons]);\n        if (detectedPolygons.length > 0) {\n          setMeasurements({\n            area: detectedPolygons[0].area,\n            perimeter: detectedPolygons[0].perimeter\n          });\n        }\n      } else {\n        setErrorMessage('No boundaries detected in this area');\n      }\n    } catch (error) {\n      console.error('Error detecting boundaries:', error);\n      setErrorMessage('Error detecting boundaries. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const exportData = () => {\n    const dataStr = JSON.stringify(polygons, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'land-measurements.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Land Measurement App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [40.505, -100.09],\n          zoom: 13,\n          style: {\n            height: '600px',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.esri.com\\\">Esri</a>\",\n            url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n            ref: featureGroupRef,\n            children: /*#__PURE__*/_jsxDEV(EditControl, {\n              position: \"topright\",\n              onCreated: handleCreate,\n              draw: {\n                rectangle: false,\n                circle: false,\n                circlemarker: false,\n                marker: true,\n                polyline: true,\n                polygon: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"measurements\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Measurements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Area: \", measurements.area, \" m\\xB2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Perimeter: \", measurements.perimeter, \" m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: detectBoundaries,\n            disabled: isProcessing,\n            className: \"action-button\",\n            children: isProcessing ? 'Processing...' : 'Detect Boundaries'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportData,\n            disabled: polygons.length === 0,\n            className: \"action-button\",\n            children: \"Export Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saved-measurements\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Saved Measurements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), polygons.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No measurements saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: polygons.map(polygon => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Area: \", polygon.area, \" m\\xB2 | Perimeter: \", polygon.perimeter, \" m\"]\n            }, polygon.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DgXM2lXfFDMFnvw/dIwlHzBLLyk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","FeatureGroup","EditControl","axios","jsxDEV","_jsxDEV","App","_s","measurements","setMeasurements","area","perimeter","polygons","setPolygons","isProcessing","setIsProcessing","errorMessage","setErrorMessage","featureGroupRef","handleCreate","e","layerType","layer","latLngs","getLatLngs","coordinates","map","latLng","lat","lng","calculateArea","calculatePerimeter","toFixed","id","Date","now","i","length","j","Math","abs","dx","dy","sqrt","detectBoundaries","mapInstance","current","_map","bounds","getBounds","center","getCenter","zoom","getZoom","response","post","north","getNorth","south","getSouth","east","getEast","west","getWest","data","boundaries","clearLayers","detectedPolygons","forEach","boundary","L","require","polygon","addLayer","push","random","error","console","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","attribution","url","ref","position","onCreated","draw","rectangle","circle","circlemarker","marker","polyline","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/franklinbarto/Workspace/React/bbox-finder/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport './App.css';\n\nconst App = () => {\n  const [measurements, setMeasurements] = useState({\n    area: 0,\n    perimeter: 0,\n  });\n  const [polygons, setPolygons] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const featureGroupRef = useRef();\n\n  const handleCreate = (e) => {\n    const { layerType, layer } = e;\n    \n    if (layerType === 'polygon') {\n      // Get the coordinates from the created polygon\n      const latLngs = layer.getLatLngs()[0];\n      const coordinates = latLngs.map(latLng => [latLng.lat, latLng.lng]);\n      \n      // Calculate area and perimeter\n      const area = calculateArea(coordinates);\n      const perimeter = calculatePerimeter(coordinates);\n      \n      setMeasurements({\n        area: area.toFixed(2),\n        perimeter: perimeter.toFixed(2),\n      });\n      \n      // Add the polygon to state\n      setPolygons([...polygons, {\n        id: Date.now(),\n        coordinates,\n        area: area.toFixed(2),\n        perimeter: perimeter.toFixed(2),\n      }]);\n    }\n  };\n\n  const calculateArea = (coordinates) => {\n    // Basic area calculation (more accurate implementations would use geodesic calculations)\n    // This is a simplified version - real implementation would use a proper geospatial library\n    let area = 0;\n    for (let i = 0; i < coordinates.length; i++) {\n      const j = (i + 1) % coordinates.length;\n      area += coordinates[i][0] * coordinates[j][1];\n      area -= coordinates[j][0] * coordinates[i][1];\n    }\n    return Math.abs(area) * 111000 * 111000 / 2; // rough conversion to square meters\n  };\n\n  const calculatePerimeter = (coordinates) => {\n    // Basic perimeter calculation\n    let perimeter = 0;\n    for (let i = 0; i < coordinates.length; i++) {\n      const j = (i + 1) % coordinates.length;\n      const dx = coordinates[i][0] - coordinates[j][0];\n      const dy = coordinates[i][1] - coordinates[j][1];\n      perimeter += Math.sqrt(dx * dx + dy * dy);\n    }\n    return perimeter * 111000; // rough conversion to meters\n  };\n\n  const detectBoundaries = async () => {\n    setIsProcessing(true);\n    setErrorMessage('');\n    \n    try {\n      // Get the current map bounds\n      const mapInstance = featureGroupRef.current._map;\n      const bounds = mapInstance.getBounds();\n      const center = mapInstance.getCenter();\n      const zoom = mapInstance.getZoom();\n      \n      const response = await axios.post('http://localhost:5000/api/detect-boundaries', {\n        bounds: {\n          north: bounds.getNorth(),\n          south: bounds.getSouth(),\n          east: bounds.getEast(),\n          west: bounds.getWest(),\n        },\n        center: {\n          lat: center.lat,\n          lng: center.lng,\n        },\n        zoom: zoom\n      });\n      \n      // Handle the detected boundaries\n      if (response.data.boundaries && response.data.boundaries.length > 0) {\n        // Clear existing layers\n        featureGroupRef.current.clearLayers();\n        \n        // Add the detected boundaries as new polygons\n        const detectedPolygons = [];\n        response.data.boundaries.forEach(boundary => {\n          const coordinates = boundary.coordinates;\n          \n          // Create a new polygon and add it to the feature group\n          const L = require('leaflet');\n          const polygon = L.polygon(coordinates);\n          featureGroupRef.current.addLayer(polygon);\n          \n          // Calculate measurements\n          const area = calculateArea(coordinates);\n          const perimeter = calculatePerimeter(coordinates);\n          \n          detectedPolygons.push({\n            id: Date.now() + Math.random(),\n            coordinates,\n            area: area.toFixed(2),\n            perimeter: perimeter.toFixed(2),\n          });\n        });\n        \n        setPolygons([...polygons, ...detectedPolygons]);\n        \n        if (detectedPolygons.length > 0) {\n          setMeasurements({\n            area: detectedPolygons[0].area,\n            perimeter: detectedPolygons[0].perimeter,\n          });\n        }\n      } else {\n        setErrorMessage('No boundaries detected in this area');\n      }\n    } catch (error) {\n      console.error('Error detecting boundaries:', error);\n      setErrorMessage('Error detecting boundaries. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const exportData = () => {\n    const dataStr = JSON.stringify(polygons, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'land-measurements.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header>\n        <h1>Land Measurement App</h1>\n      </header>\n      \n      <div className=\"content\">\n        <div className=\"map-container\">\n          <MapContainer \n            center={[40.505, -100.09]} \n            zoom={13} \n            style={{ height: '600px', width: '100%' }}\n          >\n            <TileLayer\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <TileLayer\n              attribution='&copy; <a href=\"https://www.esri.com\">Esri</a>'\n              url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            />\n            <FeatureGroup ref={featureGroupRef}>\n              <EditControl\n                position=\"topright\"\n                onCreated={handleCreate}\n                draw={{\n                  rectangle: false,\n                  circle: false,\n                  circlemarker: false,\n                  marker: true,\n                  polyline: true,\n                  polygon: true,\n                }}\n              />\n            </FeatureGroup>\n          </MapContainer>\n        </div>\n        \n        <div className=\"controls-panel\">\n          <div className=\"measurements\">\n            <h2>Measurements</h2>\n            <p>Area: {measurements.area} m²</p>\n            <p>Perimeter: {measurements.perimeter} m</p>\n          </div>\n          \n          <div className=\"actions\">\n            <button \n              onClick={detectBoundaries} \n              disabled={isProcessing}\n              className=\"action-button\"\n            >\n              {isProcessing ? 'Processing...' : 'Detect Boundaries'}\n            </button>\n            <button \n              onClick={exportData} \n              disabled={polygons.length === 0}\n              className=\"action-button\"\n            >\n              Export Data\n            </button>\n          </div>\n          \n          {errorMessage && (\n            <div className=\"error-message\">\n              {errorMessage}\n            </div>\n          )}\n          \n          <div className=\"saved-measurements\">\n            <h3>Saved Measurements</h3>\n            {polygons.length === 0 ? (\n              <p>No measurements saved</p>\n            ) : (\n              <ul>\n                {polygons.map(polygon => (\n                  <li key={polygon.id}>\n                    Area: {polygon.area} m² | Perimeter: {polygon.perimeter} m\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}